2025-05-29 15:14:43,373 INFO: 
                ____                _       _____  ____
               / __ ) ____ _ _____ (_)_____/ ___/ / __ \
              / __  |/ __ `// ___// // ___/\__ \ / /_/ /
             / /_/ // /_/ /(__  )/ // /__ ___/ // _, _/
            /_____/ \__,_//____//_/ \___//____//_/ |_|
     ______                   __   __                 __      __
    / ____/____   ____   ____/ /  / /   __  __ _____ / /__   / /
   / / __ / __ \ / __ \ / __  /  / /   / / / // ___// //_/  / /
  / /_/ // /_/ // /_/ // /_/ /  / /___/ /_/ // /__ / /<    /_/
  \____/ \____/ \____/ \____/  /_____/\____/ \___//_/|_|  (_)
    
Version Information: 
	BasicSR: 1.4.2
	PyTorch: 2.7.0+cu128
	TorchVision: 0.22.0+cu128
2025-05-29 15:14:43,373 INFO: 
  name: train_anime_RealESRNetx4plus_1000k_B12G4
  model_type: RealESRNetModel
  scale: 4
  num_gpu: 1
  manual_seed: 0
  gt_usm: True
  resize_prob: [0.2, 0.7, 0.1]
  resize_range: [0.15, 1.5]
  gaussian_noise_prob: 0.5
  noise_range: [1, 30]
  poisson_scale_range: [0.05, 3]
  gray_noise_prob: 0.4
  jpeg_range: [30, 95]
  second_blur_prob: 0.8
  resize_prob2: [0.3, 0.4, 0.3]
  resize_range2: [0.3, 1.2]
  gaussian_noise_prob2: 0.5
  noise_range2: [1, 25]
  poisson_scale_range2: [0.05, 2.5]
  gray_noise_prob2: 0.4
  jpeg_range2: [30, 95]
  gt_size: 256
  queue_size: 320
  datasets:[
    train:[
      name: Anime
      type: RealESRGANDataset
      dataroot_gt: datasets/anime
      meta_info: datasets/anime/meta_info_train.txt
      io_backend:[
        type: disk
      ]
      blur_kernel_size: 21
      kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob: 0.1
      blur_sigma: [0.2, 3]
      betag_range: [0.5, 4]
      betap_range: [1, 2]
      blur_kernel_size2: 21
      kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob2: 0.1
      blur_sigma2: [0.2, 1.5]
      betag_range2: [0.5, 4]
      betap_range2: [1, 2]
      final_sinc_prob: 0.8
      gt_size: 256
      use_hflip: True
      use_rot: False
      use_shuffle: True
      num_worker_per_gpu: 5
      batch_size_per_gpu: 16
      dataset_enlarge_ratio: 1
      prefetch_mode: None
      phase: train
      scale: 4
    ]
    val:[
      name: validation
      type: PairedImageDataset
      dataroot_gt: datasets/anime/galData_val
      dataroot_lq: datasets/anime/galData_val_lr_x4_bicubic
      io_backend:[
        type: disk
      ]
      phase: val
      scale: 4
    ]
  ]
  network_g:[
    type: RRDBNet
    num_in_ch: 3
    num_out_ch: 3
    num_feat: 64
    num_block: 23
    num_grow_ch: 32
  ]
  path:[
    pretrain_network_g: G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4\models\net_g_185000.pth
    param_key_g: params
    strict_load_g: True
    resume_state: experiments\train_anime_RealESRNetx4plus_1000k_B12G4\training_states\185000.state
    experiments_root: G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4
    models: G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4\models
    training_states: G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4\training_states
    log: G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4
    visualization: G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4\visualization
  ]
  train:[
    ema_decay: 0.999
    optim_g:[
      type: Adam
      lr: 0.0002
      weight_decay: 0
      betas: [0.9, 0.99]
    ]
    scheduler:[
      type: MultiStepLR
      milestones: [1000000]
      gamma: 0.5
    ]
    total_iter: 1000000
    warmup_iter: -1
    pixel_opt:[
      type: L1Loss
      loss_weight: 1.0
      reduction: mean
    ]
  ]
  val:[
    val_freq: 5000.0
    save_img: True
    metrics:[
      psnr:[
        type: calculate_psnr
        crop_border: 4
        test_y_channel: False
      ]
    ]
  ]
  logger:[
    print_freq: 100
    save_checkpoint_freq: 5000.0
    use_tb_logger: True
    wandb:[
      project: None
      resume_id: None
    ]
  ]
  dist_params:[
    backend: nccl
    port: 29500
  ]
  dist: False
  rank: 0
  world_size: 1
  auto_resume: True
  is_train: True
  root_path: G:\AI\Anime-ESR

2025-05-29 15:14:44,070 INFO: Dataset [RealESRGANDataset] - Anime is built.
2025-05-29 15:14:44,070 INFO: Training statistics:
	Number of train images: 299263
	Dataset enlarge ratio: 1
	Batch size per gpu: 16
	World size (gpu number): 1
	Require iter number per epoch: 18704
	Total epochs: 54; iters: 1000000.
2025-05-29 15:14:44,134 INFO: Dataset [PairedImageDataset] - validation is built.
2025-05-29 15:14:44,134 INFO: Number of val images/folders in validation: 488
2025-05-29 15:14:44,295 INFO: Network [RRDBNet] is created.
2025-05-29 15:14:44,332 INFO: Network: RRDBNet, with parameters: 16,697,987
2025-05-29 15:14:44,332 INFO: RRDBNet(
  (conv_first): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (body): Sequential(
    (0): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (5): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (6): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (7): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (8): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (9): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (10): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (11): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (12): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (13): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (14): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (15): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (16): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (17): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (18): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (19): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (20): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (21): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (22): RRDB(
      (rdb1): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb2): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
      (rdb3): ResidualDenseBlock(
        (conv1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv5): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
  (conv_body): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_up1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_up2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_hr): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (lrelu): LeakyReLU(negative_slope=0.2, inplace=True)
)
2025-05-29 15:14:44,474 INFO: Loading RRDBNet model from G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4\models\net_g_185000.pth, with param key: [params].
2025-05-29 15:14:44,549 INFO: Use Exponential Moving Average with decay: 0.999
2025-05-29 15:14:44,686 INFO: Network [RRDBNet] is created.
2025-05-29 15:14:44,836 INFO: Loading RRDBNet model from G:\AI\Anime-ESR\experiments\train_anime_RealESRNetx4plus_1000k_B12G4\models\net_g_185000.pth, with param key: [params_ema].
2025-05-29 15:14:44,926 INFO: Loss [L1Loss] is created.
2025-05-29 15:14:44,941 INFO: Model [RealESRNetModel] is created.
2025-05-29 15:14:44,948 INFO: Resuming training from epoch: 8, iter: 185000.
2025-05-29 15:14:59,300 INFO: Start training from epoch: 8, iter: 185000
2025-05-29 15:16:50,630 INFO: [train..][epoch:  8, iter: 185,100, lr:(2.000e-04,)] [eta: 11 days, 17:40:43, time (data): 1.113 (0.158)] l_pix: 4.1922e-02 
2025-05-29 15:18:18,502 INFO: [train..][epoch:  8, iter: 185,200, lr:(2.000e-04,)] [eta: 10 days, 0:28:10, time (data): 0.996 (0.082)] l_pix: 4.4757e-02 
2025-05-29 15:19:46,301 INFO: [train..][epoch:  8, iter: 185,300, lr:(2.000e-04,)] [eta: 9 days, 10:34:14, time (data): 0.878 (0.005)] l_pix: 4.2687e-02 
2025-05-29 15:21:14,456 INFO: [train..][epoch:  8, iter: 185,400, lr:(2.000e-04,)] [eta: 9 days, 3:47:34, time (data): 0.880 (0.006)] l_pix: 5.1888e-02 
2025-05-29 15:22:42,804 INFO: [train..][epoch:  8, iter: 185,500, lr:(2.000e-04,)] [eta: 8 days, 23:47:52, time (data): 0.884 (0.005)] l_pix: 4.0466e-02 
2025-05-29 15:24:11,240 INFO: [train..][epoch:  8, iter: 185,600, lr:(2.000e-04,)] [eta: 8 days, 21:09:26, time (data): 0.884 (0.006)] l_pix: 5.8882e-02 
2025-05-29 15:25:39,529 INFO: [train..][epoch:  8, iter: 185,700, lr:(2.000e-04,)] [eta: 8 days, 19:12:57, time (data): 0.883 (0.006)] l_pix: 4.4925e-02 
2025-05-29 15:27:07,656 INFO: [train..][epoch:  8, iter: 185,800, lr:(2.000e-04,)] [eta: 8 days, 17:42:26, time (data): 0.882 (0.006)] l_pix: 5.5388e-02 
2025-05-29 15:28:36,035 INFO: [train..][epoch:  8, iter: 185,900, lr:(2.000e-04,)] [eta: 8 days, 16:35:28, time (data): 0.884 (0.006)] l_pix: 6.0254e-02 
2025-05-29 15:30:03,892 INFO: [train..][epoch:  8, iter: 186,000, lr:(2.000e-04,)] [eta: 8 days, 15:34:32, time (data): 0.881 (0.006)] l_pix: 3.5475e-02 
2025-05-29 15:31:32,031 INFO: [train..][epoch:  8, iter: 186,100, lr:(2.000e-04,)] [eta: 8 days, 14:47:51, time (data): 0.881 (0.006)] l_pix: 5.0408e-02 
2025-05-29 15:33:00,211 INFO: [train..][epoch:  8, iter: 186,200, lr:(2.000e-04,)] [eta: 8 days, 14:09:11, time (data): 0.881 (0.006)] l_pix: 4.8207e-02 
2025-05-29 15:34:27,833 INFO: [train..][epoch:  8, iter: 186,300, lr:(2.000e-04,)] [eta: 8 days, 13:30:25, time (data): 0.876 (0.006)] l_pix: 4.4528e-02 
2025-05-29 15:35:55,750 INFO: [train..][epoch:  8, iter: 186,400, lr:(2.000e-04,)] [eta: 8 days, 12:59:49, time (data): 0.878 (0.006)] l_pix: 6.5613e-02 
2025-05-29 15:37:23,742 INFO: [train..][epoch:  8, iter: 186,500, lr:(2.000e-04,)] [eta: 8 days, 12:33:47, time (data): 0.880 (0.006)] l_pix: 5.3318e-02 
2025-05-29 15:38:51,689 INFO: [train..][epoch:  8, iter: 186,600, lr:(2.000e-04,)] [eta: 8 days, 12:10:26, time (data): 0.880 (0.006)] l_pix: 5.0885e-02 
2025-05-29 15:40:19,430 INFO: [train..][epoch:  8, iter: 186,700, lr:(2.000e-04,)] [eta: 8 days, 11:48:01, time (data): 0.877 (0.006)] l_pix: 6.3488e-02 
2025-05-29 15:41:46,648 INFO: [train..][epoch:  8, iter: 186,800, lr:(2.000e-04,)] [eta: 8 days, 11:24:00, time (data): 0.875 (0.006)] l_pix: 4.9879e-02 
2025-05-29 15:43:14,038 INFO: [train..][epoch:  8, iter: 186,900, lr:(2.000e-04,)] [eta: 8 days, 11:03:34, time (data): 0.874 (0.006)] l_pix: 5.7927e-02 
2025-05-29 15:44:41,950 INFO: [train..][epoch:  8, iter: 187,000, lr:(2.000e-04,)] [eta: 8 days, 10:48:35, time (data): 0.877 (0.006)] l_pix: 4.1360e-02 
2025-05-29 15:46:09,215 INFO: [train..][epoch:  8, iter: 187,100, lr:(2.000e-04,)] [eta: 8 days, 10:30:42, time (data): 0.873 (0.006)] l_pix: 5.1912e-02 
2025-05-29 15:47:36,714 INFO: [train..][epoch:  8, iter: 187,200, lr:(2.000e-04,)] [eta: 8 days, 10:15:46, time (data): 0.874 (0.006)] l_pix: 5.1768e-02 
2025-05-29 15:49:04,687 INFO: [train..][epoch:  8, iter: 187,300, lr:(2.000e-04,)] [eta: 8 days, 10:04:47, time (data): 0.881 (0.006)] l_pix: 5.4977e-02 
2025-05-29 15:50:33,484 INFO: [train..][epoch:  8, iter: 187,400, lr:(2.000e-04,)] [eta: 8 days, 9:59:14, time (data): 0.885 (0.006)] l_pix: 5.2099e-02 
2025-05-29 15:52:01,160 INFO: [train..][epoch:  8, iter: 187,500, lr:(2.000e-04,)] [eta: 8 days, 9:47:57, time (data): 0.877 (0.006)] l_pix: 5.9000e-02 
2025-05-29 15:53:28,663 INFO: [train..][epoch:  8, iter: 187,600, lr:(2.000e-04,)] [eta: 8 days, 9:36:31, time (data): 0.876 (0.006)] l_pix: 4.2039e-02 
2025-05-29 15:54:56,356 INFO: [train..][epoch:  8, iter: 187,700, lr:(2.000e-04,)] [eta: 8 days, 9:26:47, time (data): 0.877 (0.005)] l_pix: 4.3200e-02 
2025-05-29 15:56:24,233 INFO: [train..][epoch:  8, iter: 187,800, lr:(2.000e-04,)] [eta: 8 days, 9:18:31, time (data): 0.878 (0.005)] l_pix: 3.9761e-02 
2025-05-29 15:57:52,340 INFO: [train..][epoch:  8, iter: 187,900, lr:(2.000e-04,)] [eta: 8 days, 9:11:48, time (data): 0.882 (0.006)] l_pix: 5.6763e-02 
2025-05-29 15:59:20,122 INFO: [train..][epoch:  8, iter: 188,000, lr:(2.000e-04,)] [eta: 8 days, 9:03:58, time (data): 0.880 (0.006)] l_pix: 5.3852e-02 
2025-05-29 16:00:47,372 INFO: [train..][epoch:  8, iter: 188,100, lr:(2.000e-04,)] [eta: 8 days, 8:54:13, time (data): 0.872 (0.006)] l_pix: 6.2308e-02 
2025-05-29 16:02:14,680 INFO: [train..][epoch:  8, iter: 188,200, lr:(2.000e-04,)] [eta: 8 days, 8:45:14, time (data): 0.873 (0.006)] l_pix: 5.2362e-02 
2025-05-29 16:03:41,925 INFO: [train..][epoch:  8, iter: 188,300, lr:(2.000e-04,)] [eta: 8 days, 8:36:27, time (data): 0.872 (0.006)] l_pix: 4.3616e-02 
2025-05-29 16:05:09,125 INFO: [train..][epoch:  8, iter: 188,400, lr:(2.000e-04,)] [eta: 8 days, 8:27:55, time (data): 0.872 (0.006)] l_pix: 4.2331e-02 
2025-05-29 16:06:36,373 INFO: [train..][epoch:  8, iter: 188,500, lr:(2.000e-04,)] [eta: 8 days, 8:19:59, time (data): 0.873 (0.006)] l_pix: 5.5225e-02 
2025-05-29 16:08:04,024 INFO: [train..][epoch:  8, iter: 188,600, lr:(2.000e-04,)] [eta: 8 days, 8:13:54, time (data): 0.875 (0.005)] l_pix: 4.6629e-02 
2025-05-29 16:09:31,907 INFO: [train..][epoch:  8, iter: 188,700, lr:(2.000e-04,)] [eta: 8 days, 8:08:56, time (data): 0.879 (0.005)] l_pix: 3.9333e-02 
2025-05-29 16:10:59,862 INFO: [train..][epoch:  8, iter: 188,800, lr:(2.000e-04,)] [eta: 8 days, 8:04:24, time (data): 0.879 (0.005)] l_pix: 5.5276e-02 
2025-05-29 16:12:27,542 INFO: [train..][epoch:  8, iter: 188,900, lr:(2.000e-04,)] [eta: 8 days, 7:59:05, time (data): 0.876 (0.005)] l_pix: 4.3532e-02 
2025-05-29 16:13:55,099 INFO: [train..][epoch:  8, iter: 189,000, lr:(2.000e-04,)] [eta: 8 days, 7:53:32, time (data): 0.876 (0.006)] l_pix: 5.7752e-02 
2025-05-29 16:15:22,898 INFO: [train..][epoch:  8, iter: 189,100, lr:(2.000e-04,)] [eta: 8 days, 7:48:59, time (data): 0.877 (0.006)] l_pix: 5.7437e-02 
2025-05-29 16:16:50,610 INFO: [train..][epoch:  8, iter: 189,200, lr:(2.000e-04,)] [eta: 8 days, 7:44:18, time (data): 0.877 (0.006)] l_pix: 4.8035e-02 
2025-05-29 16:18:18,213 INFO: [train..][epoch:  8, iter: 189,300, lr:(2.000e-04,)] [eta: 8 days, 7:39:25, time (data): 0.875 (0.006)] l_pix: 4.7027e-02 
2025-05-29 16:19:46,040 INFO: [train..][epoch:  8, iter: 189,400, lr:(2.000e-04,)] [eta: 8 days, 7:35:23, time (data): 0.877 (0.006)] l_pix: 4.5393e-02 
2025-05-29 16:21:13,610 INFO: [train..][epoch:  8, iter: 189,500, lr:(2.000e-04,)] [eta: 8 days, 7:30:41, time (data): 0.875 (0.006)] l_pix: 5.6238e-02 
2025-05-29 16:22:41,216 INFO: [train..][epoch:  8, iter: 189,600, lr:(2.000e-04,)] [eta: 8 days, 7:26:14, time (data): 0.876 (0.006)] l_pix: 5.8175e-02 
2025-05-29 16:24:09,050 INFO: [train..][epoch:  8, iter: 189,700, lr:(2.000e-04,)] [eta: 8 days, 7:22:35, time (data): 0.878 (0.006)] l_pix: 6.1541e-02 
2025-05-29 16:25:37,044 INFO: [train..][epoch:  8, iter: 189,800, lr:(2.000e-04,)] [eta: 8 days, 7:19:28, time (data): 0.879 (0.006)] l_pix: 3.8121e-02 
2025-05-29 16:27:04,661 INFO: [train..][epoch:  8, iter: 189,900, lr:(2.000e-04,)] [eta: 8 days, 7:15:22, time (data): 0.876 (0.006)] l_pix: 4.6903e-02 
2025-05-29 16:28:32,414 INFO: [train..][epoch:  8, iter: 190,000, lr:(2.000e-04,)] [eta: 8 days, 7:11:45, time (data): 0.877 (0.006)] l_pix: 4.9561e-02 
2025-05-29 16:28:32,414 INFO: Saving models and training states.
2025-05-29 16:37:41,441 INFO: Validation validation
	 # psnr: 27.1099	Best: 27.1099 @ 190000 iter

2025-05-29 16:39:09,151 INFO: [train..][epoch:  8, iter: 190,100, lr:(2.000e-04,)] [eta: 9 days, 7:20:56, time (data): 0.878 (0.005)] l_pix: 4.2879e-02 
2025-05-29 16:40:36,645 INFO: [train..][epoch:  8, iter: 190,200, lr:(2.000e-04,)] [eta: 9 days, 6:48:42, time (data): 0.876 (0.005)] l_pix: 4.1605e-02 
2025-05-29 16:42:04,521 INFO: [train..][epoch:  8, iter: 190,300, lr:(2.000e-04,)] [eta: 9 days, 6:18:36, time (data): 0.879 (0.006)] l_pix: 5.2960e-02 
2025-05-29 16:43:32,407 INFO: [train..][epoch:  8, iter: 190,400, lr:(2.000e-04,)] [eta: 9 days, 5:49:35, time (data): 0.879 (0.006)] l_pix: 3.8468e-02 
2025-05-29 16:45:00,123 INFO: [train..][epoch:  8, iter: 190,500, lr:(2.000e-04,)] [eta: 9 days, 5:21:09, time (data): 0.878 (0.006)] l_pix: 5.8664e-02 
2025-05-29 16:46:27,765 INFO: [train..][epoch:  8, iter: 190,600, lr:(2.000e-04,)] [eta: 9 days, 4:53:30, time (data): 0.877 (0.006)] l_pix: 4.3502e-02 
2025-05-29 16:47:55,364 INFO: [train..][epoch:  8, iter: 190,700, lr:(2.000e-04,)] [eta: 9 days, 4:26:40, time (data): 0.876 (0.006)] l_pix: 4.6777e-02 
2025-05-29 16:49:23,327 INFO: [train..][epoch:  8, iter: 190,800, lr:(2.000e-04,)] [eta: 9 days, 4:01:34, time (data): 0.878 (0.006)] l_pix: 3.7535e-02 
2025-05-29 16:50:50,975 INFO: [train..][epoch:  8, iter: 190,900, lr:(2.000e-04,)] [eta: 9 days, 3:36:32, time (data): 0.876 (0.006)] l_pix: 4.0875e-02 
2025-05-29 16:52:18,792 INFO: [train..][epoch:  8, iter: 191,000, lr:(2.000e-04,)] [eta: 9 days, 3:12:40, time (data): 0.877 (0.006)] l_pix: 4.6133e-02 
2025-05-29 16:53:46,234 INFO: [train..][epoch:  8, iter: 191,100, lr:(2.000e-04,)] [eta: 9 days, 2:48:43, time (data): 0.874 (0.006)] l_pix: 4.6646e-02 
2025-05-29 16:55:14,052 INFO: [train..][epoch:  8, iter: 191,200, lr:(2.000e-04,)] [eta: 9 days, 2:26:18, time (data): 0.877 (0.006)] l_pix: 4.9047e-02 
2025-05-29 16:56:41,811 INFO: [train..][epoch:  8, iter: 191,300, lr:(2.000e-04,)] [eta: 9 days, 2:04:26, time (data): 0.877 (0.006)] l_pix: 4.2626e-02 
2025-05-29 16:58:09,438 INFO: [train..][epoch:  8, iter: 191,400, lr:(2.000e-04,)] [eta: 9 days, 1:42:55, time (data): 0.877 (0.006)] l_pix: 3.9296e-02 
2025-05-29 16:59:37,176 INFO: [train..][epoch:  8, iter: 191,500, lr:(2.000e-04,)] [eta: 9 days, 1:22:14, time (data): 0.878 (0.006)] l_pix: 5.2651e-02 
2025-05-29 17:01:04,887 INFO: [train..][epoch:  8, iter: 191,600, lr:(2.000e-04,)] [eta: 9 days, 1:02:06, time (data): 0.878 (0.006)] l_pix: 3.7570e-02 
2025-05-29 17:02:32,490 INFO: [train..][epoch:  8, iter: 191,700, lr:(2.000e-04,)] [eta: 9 days, 0:42:18, time (data): 0.876 (0.006)] l_pix: 3.7788e-02 
2025-05-29 17:04:00,278 INFO: [train..][epoch:  8, iter: 191,800, lr:(2.000e-04,)] [eta: 9 days, 0:23:24, time (data): 0.877 (0.006)] l_pix: 5.4146e-02 
2025-05-29 17:05:28,095 INFO: [train..][epoch:  8, iter: 191,900, lr:(2.000e-04,)] [eta: 9 days, 0:05:04, time (data): 0.879 (0.006)] l_pix: 5.5536e-02 
2025-05-29 17:06:55,841 INFO: [train..][epoch:  8, iter: 192,000, lr:(2.000e-04,)] [eta: 8 days, 23:47:05, time (data): 0.878 (0.006)] l_pix: 5.4218e-02 
2025-05-29 17:08:23,456 INFO: [train..][epoch:  8, iter: 192,100, lr:(2.000e-04,)] [eta: 8 days, 23:29:19, time (data): 0.875 (0.006)] l_pix: 4.9052e-02 
2025-05-29 17:09:51,183 INFO: [train..][epoch:  8, iter: 192,200, lr:(2.000e-04,)] [eta: 8 days, 23:12:12, time (data): 0.877 (0.006)] l_pix: 4.8786e-02 
2025-05-29 17:11:18,820 INFO: [train..][epoch:  8, iter: 192,300, lr:(2.000e-04,)] [eta: 8 days, 22:55:21, time (data): 0.876 (0.006)] l_pix: 5.5168e-02 
2025-05-29 17:12:46,477 INFO: [train..][epoch:  8, iter: 192,400, lr:(2.000e-04,)] [eta: 8 days, 22:38:58, time (data): 0.877 (0.006)] l_pix: 5.0483e-02 
2025-05-29 17:14:14,222 INFO: [train..][epoch:  8, iter: 192,500, lr:(2.000e-04,)] [eta: 8 days, 22:23:07, time (data): 0.879 (0.006)] l_pix: 5.0818e-02 
2025-05-29 17:15:41,887 INFO: [train..][epoch:  8, iter: 192,600, lr:(2.000e-04,)] [eta: 8 days, 22:07:31, time (data): 0.877 (0.005)] l_pix: 5.3774e-02 
2025-05-29 17:17:09,509 INFO: [train..][epoch:  8, iter: 192,700, lr:(2.000e-04,)] [eta: 8 days, 21:52:13, time (data): 0.878 (0.006)] l_pix: 5.3457e-02 
2025-05-29 17:18:37,142 INFO: [train..][epoch:  8, iter: 192,800, lr:(2.000e-04,)] [eta: 8 days, 21:37:17, time (data): 0.877 (0.006)] l_pix: 4.6018e-02 
2025-05-29 17:20:04,744 INFO: [train..][epoch:  8, iter: 192,900, lr:(2.000e-04,)] [eta: 8 days, 21:22:38, time (data): 0.874 (0.005)] l_pix: 6.5433e-02 
2025-05-29 17:21:32,590 INFO: [train..][epoch:  8, iter: 193,000, lr:(2.000e-04,)] [eta: 8 days, 21:08:44, time (data): 0.877 (0.006)] l_pix: 5.0278e-02 
2025-05-29 17:23:00,335 INFO: [train..][epoch:  8, iter: 193,100, lr:(2.000e-04,)] [eta: 8 days, 20:54:57, time (data): 0.877 (0.006)] l_pix: 5.7255e-02 
2025-05-29 17:24:27,956 INFO: [train..][epoch:  8, iter: 193,200, lr:(2.000e-04,)] [eta: 8 days, 20:41:17, time (data): 0.877 (0.006)] l_pix: 5.4680e-02 
2025-05-29 17:25:55,683 INFO: [train..][epoch:  8, iter: 193,300, lr:(2.000e-04,)] [eta: 8 days, 20:28:05, time (data): 0.877 (0.006)] l_pix: 4.8896e-02 
2025-05-29 17:27:23,355 INFO: [train..][epoch:  8, iter: 193,400, lr:(2.000e-04,)] [eta: 8 days, 20:15:04, time (data): 0.877 (0.006)] l_pix: 5.0849e-02 
2025-05-29 17:28:51,253 INFO: [train..][epoch:  8, iter: 193,500, lr:(2.000e-04,)] [eta: 8 days, 20:02:41, time (data): 0.879 (0.006)] l_pix: 5.3329e-02 
2025-05-29 17:30:18,799 INFO: [train..][epoch:  8, iter: 193,600, lr:(2.000e-04,)] [eta: 8 days, 19:50:00, time (data): 0.877 (0.006)] l_pix: 3.9837e-02 
2025-05-29 17:31:46,587 INFO: [train..][epoch:  8, iter: 193,700, lr:(2.000e-04,)] [eta: 8 days, 19:37:57, time (data): 0.878 (0.006)] l_pix: 4.0356e-02 
2025-05-29 17:33:14,562 INFO: [train..][epoch:  8, iter: 193,800, lr:(2.000e-04,)] [eta: 8 days, 19:26:26, time (data): 0.879 (0.006)] l_pix: 5.6428e-02 
2025-05-29 17:34:42,381 INFO: [train..][epoch:  8, iter: 193,900, lr:(2.000e-04,)] [eta: 8 days, 19:14:54, time (data): 0.878 (0.006)] l_pix: 3.3388e-02 
2025-05-29 17:36:10,602 INFO: [train..][epoch:  8, iter: 194,000, lr:(2.000e-04,)] [eta: 8 days, 19:04:12, time (data): 0.881 (0.006)] l_pix: 4.9272e-02 
2025-05-29 17:37:38,217 INFO: [train..][epoch:  8, iter: 194,100, lr:(2.000e-04,)] [eta: 8 days, 18:52:48, time (data): 0.875 (0.006)] l_pix: 5.6856e-02 
2025-05-29 17:39:06,105 INFO: [train..][epoch:  8, iter: 194,200, lr:(2.000e-04,)] [eta: 8 days, 18:42:01, time (data): 0.878 (0.006)] l_pix: 4.5503e-02 
2025-05-29 17:40:33,810 INFO: [train..][epoch:  8, iter: 194,300, lr:(2.000e-04,)] [eta: 8 days, 18:31:10, time (data): 0.878 (0.006)] l_pix: 6.1073e-02 
2025-05-29 17:42:01,617 INFO: [train..][epoch:  8, iter: 194,400, lr:(2.000e-04,)] [eta: 8 days, 18:20:39, time (data): 0.878 (0.006)] l_pix: 4.8648e-02 
2025-05-29 17:43:29,350 INFO: [train..][epoch:  8, iter: 194,500, lr:(2.000e-04,)] [eta: 8 days, 18:10:14, time (data): 0.876 (0.006)] l_pix: 6.6027e-02 
2025-05-29 17:44:57,142 INFO: [train..][epoch:  8, iter: 194,600, lr:(2.000e-04,)] [eta: 8 days, 18:00:05, time (data): 0.877 (0.006)] l_pix: 5.4006e-02 
2025-05-29 17:46:24,871 INFO: [train..][epoch:  8, iter: 194,700, lr:(2.000e-04,)] [eta: 8 days, 17:50:02, time (data): 0.877 (0.006)] l_pix: 5.0921e-02 
2025-05-29 17:47:52,667 INFO: [train..][epoch:  8, iter: 194,800, lr:(2.000e-04,)] [eta: 8 days, 17:40:14, time (data): 0.877 (0.006)] l_pix: 4.5615e-02 
2025-05-29 17:49:20,511 INFO: [train..][epoch:  8, iter: 194,900, lr:(2.000e-04,)] [eta: 8 days, 17:30:41, time (data): 0.880 (0.006)] l_pix: 3.9324e-02 
2025-05-29 17:50:48,382 INFO: [train..][epoch:  8, iter: 195,000, lr:(2.000e-04,)] [eta: 8 days, 17:21:20, time (data): 0.879 (0.006)] l_pix: 5.5261e-02 
2025-05-29 17:50:48,382 INFO: Saving models and training states.
2025-05-29 17:56:50,586 INFO: Validation validation
	 # psnr: 27.1103	Best: 27.1103 @ 195000 iter

2025-05-29 17:58:18,492 INFO: [train..][epoch:  8, iter: 195,100, lr:(2.000e-04,)] [eta: 9 days, 1:13:13, time (data): 0.877 (0.006)] l_pix: 5.5228e-02 
2025-05-29 17:59:46,304 INFO: [train..][epoch:  8, iter: 195,200, lr:(2.000e-04,)] [eta: 9 days, 0:59:18, time (data): 0.878 (0.006)] l_pix: 4.7268e-02 
2025-05-29 18:01:14,213 INFO: [train..][epoch:  8, iter: 195,300, lr:(2.000e-04,)] [eta: 9 days, 0:45:46, time (data): 0.880 (0.006)] l_pix: 4.6169e-02 
2025-05-29 18:02:41,886 INFO: [train..][epoch:  8, iter: 195,400, lr:(2.000e-04,)] [eta: 9 days, 0:32:10, time (data): 0.878 (0.006)] l_pix: 5.5824e-02 
2025-05-29 18:04:09,663 INFO: [train..][epoch:  8, iter: 195,500, lr:(2.000e-04,)] [eta: 9 days, 0:18:55, time (data): 0.877 (0.006)] l_pix: 5.0001e-02 
2025-05-29 18:05:37,421 INFO: [train..][epoch:  8, iter: 195,600, lr:(2.000e-04,)] [eta: 9 days, 0:05:52, time (data): 0.877 (0.006)] l_pix: 5.6936e-02 
2025-05-29 18:07:05,167 INFO: [train..][epoch:  8, iter: 195,700, lr:(2.000e-04,)] [eta: 8 days, 23:53:02, time (data): 0.880 (0.006)] l_pix: 5.7230e-02 
2025-05-29 18:08:33,014 INFO: [train..][epoch:  8, iter: 195,800, lr:(2.000e-04,)] [eta: 8 days, 23:40:31, time (data): 0.879 (0.006)] l_pix: 4.8384e-02 
2025-05-29 18:10:01,125 INFO: [train..][epoch:  8, iter: 195,900, lr:(2.000e-04,)] [eta: 8 days, 23:28:33, time (data): 0.886 (0.006)] l_pix: 4.4884e-02 
2025-05-29 18:35:44,841 INFO: [train..][epoch:  8, iter: 196,000, lr:(2.000e-04,)] [eta: 10 days, 4:49:47, time (data): 10.852 (0.005)] l_pix: 3.3149e-02 
2025-05-29 18:37:15,570 INFO: [train..][epoch:  8, iter: 196,100, lr:(2.000e-04,)] [eta: 10 days, 4:25:09, time (data): 0.906 (0.005)] l_pix: 3.7609e-02 
2025-05-29 18:38:44,949 INFO: [train..][epoch:  8, iter: 196,200, lr:(2.000e-04,)] [eta: 10 days, 3:59:19, time (data): 0.897 (0.005)] l_pix: 3.8071e-02 
2025-05-29 18:40:15,074 INFO: [train..][epoch:  8, iter: 196,300, lr:(2.000e-04,)] [eta: 10 days, 3:34:47, time (data): 0.910 (0.005)] l_pix: 6.0228e-02 
2025-05-29 18:41:44,910 INFO: [train..][epoch:  8, iter: 196,400, lr:(2.000e-04,)] [eta: 10 days, 3:10:20, time (data): 0.902 (0.005)] l_pix: 4.3928e-02 
2025-05-29 18:43:13,971 INFO: [train..][epoch:  8, iter: 196,500, lr:(2.000e-04,)] [eta: 10 days, 2:45:22, time (data): 0.890 (0.005)] l_pix: 4.6917e-02 
2025-05-29 18:44:43,323 INFO: [train..][epoch:  8, iter: 196,600, lr:(2.000e-04,)] [eta: 10 days, 2:21:09, time (data): 0.893 (0.005)] l_pix: 3.7451e-02 
2025-05-29 18:46:12,747 INFO: [train..][epoch:  8, iter: 196,700, lr:(2.000e-04,)] [eta: 10 days, 1:57:24, time (data): 0.894 (0.005)] l_pix: 5.6641e-02 
2025-05-29 18:47:43,246 INFO: [train..][epoch:  8, iter: 196,800, lr:(2.000e-04,)] [eta: 10 days, 1:35:15, time (data): 0.902 (0.005)] l_pix: 4.7072e-02 
2025-05-29 18:49:12,175 INFO: [train..][epoch:  8, iter: 196,900, lr:(2.000e-04,)] [eta: 10 days, 1:11:41, time (data): 0.885 (0.006)] l_pix: 5.2001e-02 
2025-05-29 18:50:40,469 INFO: [train..][epoch:  8, iter: 197,000, lr:(2.000e-04,)] [eta: 10 days, 0:47:46, time (data): 0.884 (0.006)] l_pix: 3.7957e-02 
2025-05-29 18:52:09,096 INFO: [train..][epoch:  8, iter: 197,100, lr:(2.000e-04,)] [eta: 10 days, 0:24:36, time (data): 0.886 (0.006)] l_pix: 4.3107e-02 
2025-05-29 18:53:37,490 INFO: [train..][epoch:  8, iter: 197,200, lr:(2.000e-04,)] [eta: 10 days, 0:01:32, time (data): 0.885 (0.006)] l_pix: 5.0568e-02 
2025-05-29 18:55:05,689 INFO: [train..][epoch:  8, iter: 197,300, lr:(2.000e-04,)] [eta: 9 days, 23:38:36, time (data): 0.880 (0.006)] l_pix: 4.4552e-02 
2025-05-29 18:56:33,822 INFO: [train..][epoch:  8, iter: 197,400, lr:(2.000e-04,)] [eta: 9 days, 23:15:56, time (data): 0.881 (0.006)] l_pix: 4.2851e-02 
2025-05-29 18:58:01,849 INFO: [train..][epoch:  8, iter: 197,500, lr:(2.000e-04,)] [eta: 9 days, 22:53:31, time (data): 0.882 (0.006)] l_pix: 5.7489e-02 
2025-05-29 18:59:31,140 INFO: [train..][epoch:  8, iter: 197,600, lr:(2.000e-04,)] [eta: 9 days, 22:32:45, time (data): 0.890 (0.006)] l_pix: 3.7641e-02 
2025-05-29 19:01:00,151 INFO: [train..][epoch:  8, iter: 197,700, lr:(2.000e-04,)] [eta: 9 days, 22:12:00, time (data): 0.891 (0.006)] l_pix: 4.6803e-02 
2025-05-29 19:02:28,945 INFO: [train..][epoch:  8, iter: 197,800, lr:(2.000e-04,)] [eta: 9 days, 21:51:20, time (data): 0.889 (0.006)] l_pix: 5.9036e-02 
2025-05-29 19:03:58,153 INFO: [train..][epoch:  8, iter: 197,900, lr:(2.000e-04,)] [eta: 9 days, 21:31:23, time (data): 0.893 (0.006)] l_pix: 4.9946e-02 
2025-05-29 19:05:27,422 INFO: [train..][epoch:  8, iter: 198,000, lr:(2.000e-04,)] [eta: 9 days, 21:11:47, time (data): 0.893 (0.006)] l_pix: 5.0477e-02 
2025-05-29 19:06:57,123 INFO: [train..][epoch:  8, iter: 198,100, lr:(2.000e-04,)] [eta: 9 days, 20:52:54, time (data): 0.892 (0.006)] l_pix: 4.2987e-02 
2025-05-29 19:08:26,189 INFO: [train..][epoch:  8, iter: 198,200, lr:(2.000e-04,)] [eta: 9 days, 20:33:38, time (data): 0.891 (0.006)] l_pix: 4.7314e-02 
2025-05-29 19:09:55,468 INFO: [train..][epoch:  8, iter: 198,300, lr:(2.000e-04,)] [eta: 9 days, 20:14:51, time (data): 0.894 (0.006)] l_pix: 5.1912e-02 
2025-05-29 19:11:25,335 INFO: [train..][epoch:  8, iter: 198,400, lr:(2.000e-04,)] [eta: 9 days, 19:56:55, time (data): 0.898 (0.006)] l_pix: 4.2958e-02 
2025-05-29 19:12:54,244 INFO: [train..][epoch:  8, iter: 198,500, lr:(2.000e-04,)] [eta: 9 days, 19:38:16, time (data): 0.886 (0.005)] l_pix: 4.0574e-02 
2025-05-29 19:14:24,380 INFO: [train..][epoch:  8, iter: 198,600, lr:(2.000e-04,)] [eta: 9 days, 19:21:05, time (data): 0.897 (0.005)] l_pix: 5.6429e-02 
2025-05-29 19:15:55,680 INFO: [train..][epoch:  8, iter: 198,700, lr:(2.000e-04,)] [eta: 9 days, 19:05:16, time (data): 0.900 (0.006)] l_pix: 5.2062e-02 
2025-05-29 19:17:25,450 INFO: [train..][epoch:  8, iter: 198,800, lr:(2.000e-04,)] [eta: 9 days, 18:48:10, time (data): 0.898 (0.006)] l_pix: 4.6449e-02 
2025-05-29 19:18:55,926 INFO: [train..][epoch:  8, iter: 198,900, lr:(2.000e-04,)] [eta: 9 days, 18:31:59, time (data): 0.907 (0.006)] l_pix: 4.5766e-02 
2025-05-29 19:20:26,386 INFO: [train..][epoch:  8, iter: 199,000, lr:(2.000e-04,)] [eta: 9 days, 18:15:59, time (data): 0.905 (0.006)] l_pix: 3.3167e-02 
2025-05-29 19:21:56,770 INFO: [train..][epoch:  8, iter: 199,100, lr:(2.000e-04,)] [eta: 9 days, 18:00:07, time (data): 0.902 (0.006)] l_pix: 4.4962e-02 
2025-05-29 19:23:27,227 INFO: [train..][epoch:  8, iter: 199,200, lr:(2.000e-04,)] [eta: 9 days, 17:44:32, time (data): 0.904 (0.006)] l_pix: 4.1649e-02 
2025-05-29 19:24:57,613 INFO: [train..][epoch:  8, iter: 199,300, lr:(2.000e-04,)] [eta: 9 days, 17:29:04, time (data): 0.907 (0.006)] l_pix: 3.4900e-02 
2025-05-29 19:26:27,937 INFO: [train..][epoch:  8, iter: 199,400, lr:(2.000e-04,)] [eta: 9 days, 17:13:44, time (data): 0.904 (0.006)] l_pix: 2.9613e-02 
2025-05-29 19:27:58,263 INFO: [train..][epoch:  8, iter: 199,500, lr:(2.000e-04,)] [eta: 9 days, 16:58:36, time (data): 0.903 (0.006)] l_pix: 4.1379e-02 
2025-05-29 19:29:28,596 INFO: [train..][epoch:  8, iter: 199,600, lr:(2.000e-04,)] [eta: 9 days, 16:43:40, time (data): 0.903 (0.006)] l_pix: 3.8838e-02 
2025-05-29 19:30:58,846 INFO: [train..][epoch:  8, iter: 199,700, lr:(2.000e-04,)] [eta: 9 days, 16:28:50, time (data): 0.900 (0.006)] l_pix: 4.6069e-02 
2025-05-29 19:32:29,411 INFO: [train..][epoch:  8, iter: 199,800, lr:(2.000e-04,)] [eta: 9 days, 16:14:28, time (data): 0.904 (0.006)] l_pix: 4.1582e-02 
2025-05-29 19:33:59,722 INFO: [train..][epoch:  8, iter: 199,900, lr:(2.000e-04,)] [eta: 9 days, 16:00:02, time (data): 0.906 (0.006)] l_pix: 4.5625e-02 
2025-05-29 19:35:30,096 INFO: [train..][epoch:  8, iter: 200,000, lr:(2.000e-04,)] [eta: 9 days, 15:45:51, time (data): 0.904 (0.006)] l_pix: 5.1154e-02 
2025-05-29 19:35:30,096 INFO: Saving models and training states.
2025-05-29 19:41:43,695 INFO: Validation validation
	 # psnr: 27.1945	Best: 27.1945 @ 200000 iter

2025-05-29 19:43:14,226 INFO: [train..][epoch:  8, iter: 200,100, lr:(2.000e-04,)] [eta: 9 days, 21:01:47, time (data): 0.905 (0.006)] l_pix: 5.5346e-02 
2025-05-29 19:44:44,660 INFO: [train..][epoch:  8, iter: 200,200, lr:(2.000e-04,)] [eta: 9 days, 20:45:46, time (data): 0.905 (0.006)] l_pix: 6.3119e-02 
2025-05-29 19:46:14,925 INFO: [train..][epoch:  8, iter: 200,300, lr:(2.000e-04,)] [eta: 9 days, 20:29:47, time (data): 0.901 (0.006)] l_pix: 4.2372e-02 
2025-05-29 19:47:45,336 INFO: [train..][epoch:  8, iter: 200,400, lr:(2.000e-04,)] [eta: 9 days, 20:14:07, time (data): 0.904 (0.006)] l_pix: 5.4559e-02 
2025-05-29 19:49:15,773 INFO: [train..][epoch:  8, iter: 200,500, lr:(2.000e-04,)] [eta: 9 days, 19:58:39, time (data): 0.906 (0.006)] l_pix: 4.6364e-02 
2025-05-29 19:50:46,195 INFO: [train..][epoch:  8, iter: 200,600, lr:(2.000e-04,)] [eta: 9 days, 19:43:22, time (data): 0.905 (0.006)] l_pix: 5.1249e-02 
2025-05-29 19:52:16,602 INFO: [train..][epoch:  8, iter: 200,700, lr:(2.000e-04,)] [eta: 9 days, 19:28:14, time (data): 0.903 (0.006)] l_pix: 3.7810e-02 
2025-05-29 19:53:46,912 INFO: [train..][epoch:  8, iter: 200,800, lr:(2.000e-04,)] [eta: 9 days, 19:13:12, time (data): 0.903 (0.006)] l_pix: 6.8002e-02 
2025-05-29 19:55:17,337 INFO: [train..][epoch:  8, iter: 200,900, lr:(2.000e-04,)] [eta: 9 days, 18:58:25, time (data): 0.906 (0.006)] l_pix: 4.4796e-02 
2025-05-29 19:56:47,900 INFO: [train..][epoch:  8, iter: 201,000, lr:(2.000e-04,)] [eta: 9 days, 18:43:56, time (data): 0.906 (0.006)] l_pix: 5.0165e-02 
2025-05-29 19:58:18,253 INFO: [train..][epoch:  8, iter: 201,100, lr:(2.000e-04,)] [eta: 9 days, 18:29:25, time (data): 0.899 (0.006)] l_pix: 5.0030e-02 
2025-05-29 19:59:48,851 INFO: [train..][epoch:  8, iter: 201,200, lr:(2.000e-04,)] [eta: 9 days, 18:15:17, time (data): 0.905 (0.006)] l_pix: 4.8775e-02 
2025-05-29 20:01:19,243 INFO: [train..][epoch:  8, iter: 201,300, lr:(2.000e-04,)] [eta: 9 days, 18:01:07, time (data): 0.902 (0.006)] l_pix: 4.3267e-02 
2025-05-29 20:02:49,691 INFO: [train..][epoch:  8, iter: 201,400, lr:(2.000e-04,)] [eta: 9 days, 17:47:10, time (data): 0.904 (0.006)] l_pix: 4.7297e-02 
2025-05-29 20:04:20,111 INFO: [train..][epoch:  8, iter: 201,500, lr:(2.000e-04,)] [eta: 9 days, 17:33:20, time (data): 0.903 (0.006)] l_pix: 5.4081e-02 
2025-05-29 20:05:50,488 INFO: [train..][epoch:  8, iter: 201,600, lr:(2.000e-04,)] [eta: 9 days, 17:19:37, time (data): 0.904 (0.006)] l_pix: 4.8449e-02 
2025-05-29 20:07:20,896 INFO: [train..][epoch:  8, iter: 201,700, lr:(2.000e-04,)] [eta: 9 days, 17:06:05, time (data): 0.902 (0.006)] l_pix: 5.8021e-02 
2025-05-29 20:08:51,350 INFO: [train..][epoch:  8, iter: 201,800, lr:(2.000e-04,)] [eta: 9 days, 16:52:43, time (data): 0.904 (0.006)] l_pix: 4.5045e-02 
2025-05-29 20:10:21,927 INFO: [train..][epoch:  8, iter: 201,900, lr:(2.000e-04,)] [eta: 9 days, 16:39:35, time (data): 0.906 (0.006)] l_pix: 4.1959e-02 
2025-05-29 20:11:52,371 INFO: [train..][epoch:  8, iter: 202,000, lr:(2.000e-04,)] [eta: 9 days, 16:26:29, time (data): 0.905 (0.006)] l_pix: 4.8468e-02 
2025-05-29 20:13:22,821 INFO: [train..][epoch:  8, iter: 202,100, lr:(2.000e-04,)] [eta: 9 days, 16:13:32, time (data): 0.907 (0.006)] l_pix: 5.8152e-02 
2025-05-29 20:14:53,174 INFO: [train..][epoch:  8, iter: 202,200, lr:(2.000e-04,)] [eta: 9 days, 16:00:38, time (data): 0.904 (0.006)] l_pix: 4.4439e-02 
2025-05-29 20:16:23,892 INFO: [train..][epoch:  8, iter: 202,300, lr:(2.000e-04,)] [eta: 9 days, 15:48:09, time (data): 0.905 (0.006)] l_pix: 4.8468e-02 
2025-05-29 20:17:54,269 INFO: [train..][epoch:  8, iter: 202,400, lr:(2.000e-04,)] [eta: 9 days, 15:35:32, time (data): 0.904 (0.006)] l_pix: 4.7426e-02 
2025-05-29 20:19:24,806 INFO: [train..][epoch:  8, iter: 202,500, lr:(2.000e-04,)] [eta: 9 days, 15:23:10, time (data): 0.902 (0.006)] l_pix: 6.3869e-02 
2025-05-29 20:20:55,261 INFO: [train..][epoch:  8, iter: 202,600, lr:(2.000e-04,)] [eta: 9 days, 15:10:52, time (data): 0.904 (0.006)] l_pix: 4.7144e-02 
2025-05-29 20:22:25,839 INFO: [train..][epoch:  8, iter: 202,700, lr:(2.000e-04,)] [eta: 9 days, 14:58:46, time (data): 0.904 (0.006)] l_pix: 5.5749e-02 
2025-05-29 20:23:56,250 INFO: [train..][epoch:  8, iter: 202,800, lr:(2.000e-04,)] [eta: 9 days, 14:46:40, time (data): 0.904 (0.006)] l_pix: 4.2557e-02 
2025-05-29 20:25:26,178 INFO: [train..][epoch:  8, iter: 202,900, lr:(2.000e-04,)] [eta: 9 days, 14:34:20, time (data): 0.901 (0.005)] l_pix: 4.9494e-02 
2025-05-29 20:26:55,008 INFO: [train..][epoch:  8, iter: 203,000, lr:(2.000e-04,)] [eta: 9 days, 14:21:18, time (data): 0.890 (0.005)] l_pix: 4.0074e-02 
2025-05-29 20:28:23,901 INFO: [train..][epoch:  8, iter: 203,100, lr:(2.000e-04,)] [eta: 9 days, 14:08:26, time (data): 0.893 (0.005)] l_pix: 4.5408e-02 
2025-05-29 20:29:52,784 INFO: [train..][epoch:  8, iter: 203,200, lr:(2.000e-04,)] [eta: 9 days, 13:55:42, time (data): 0.889 (0.005)] l_pix: 5.2515e-02 
2025-05-29 20:31:21,760 INFO: [train..][epoch:  8, iter: 203,300, lr:(2.000e-04,)] [eta: 9 days, 13:43:09, time (data): 0.888 (0.005)] l_pix: 5.0648e-02 
2025-05-29 20:32:50,465 INFO: [train..][epoch:  8, iter: 203,400, lr:(2.000e-04,)] [eta: 9 days, 13:30:32, time (data): 0.887 (0.005)] l_pix: 4.8275e-02 
2025-05-29 20:34:19,372 INFO: [train..][epoch:  8, iter: 203,500, lr:(2.000e-04,)] [eta: 9 days, 13:18:11, time (data): 0.888 (0.006)] l_pix: 5.3989e-02 
2025-05-29 20:35:47,788 INFO: [train..][epoch:  8, iter: 203,600, lr:(2.000e-04,)] [eta: 9 days, 13:05:35, time (data): 0.884 (0.006)] l_pix: 4.9849e-02 
2025-05-29 20:37:16,740 INFO: [train..][epoch:  8, iter: 203,700, lr:(2.000e-04,)] [eta: 9 days, 12:53:30, time (data): 0.885 (0.005)] l_pix: 3.8137e-02 
2025-05-29 20:39:01,139 INFO: [train..][epoch:  9, iter: 203,800, lr:(2.000e-04,)] [eta: 9 days, 12:52:25, time (data): 1.034 (0.152)] l_pix: 5.0443e-02 
2025-05-29 20:40:31,108 INFO: [train..][epoch:  9, iter: 203,900, lr:(2.000e-04,)] [eta: 9 days, 12:41:12, time (data): 0.912 (0.005)] l_pix: 5.4744e-02 
2025-05-29 20:42:01,355 INFO: [train..][epoch:  9, iter: 204,000, lr:(2.000e-04,)] [eta: 9 days, 12:30:17, time (data): 0.903 (0.006)] l_pix: 4.2757e-02 
2025-05-29 20:43:31,298 INFO: [train..][epoch:  9, iter: 204,100, lr:(2.000e-04,)] [eta: 9 days, 12:19:16, time (data): 0.896 (0.006)] l_pix: 6.2918e-02 
2025-05-29 20:44:59,978 INFO: [train..][epoch:  9, iter: 204,200, lr:(2.000e-04,)] [eta: 9 days, 12:07:27, time (data): 0.887 (0.006)] l_pix: 4.3752e-02 
2025-05-29 20:46:28,388 INFO: [train..][epoch:  9, iter: 204,300, lr:(2.000e-04,)] [eta: 9 days, 11:55:35, time (data): 0.874 (0.005)] l_pix: 5.1384e-02 
2025-05-29 20:47:56,743 INFO: [train..][epoch:  9, iter: 204,400, lr:(2.000e-04,)] [eta: 9 days, 11:43:46, time (data): 0.883 (0.005)] l_pix: 4.5800e-02 
2025-05-29 20:49:25,195 INFO: [train..][epoch:  9, iter: 204,500, lr:(2.000e-04,)] [eta: 9 days, 11:32:08, time (data): 0.897 (0.005)] l_pix: 3.5183e-02 
2025-05-29 20:50:53,643 INFO: [train..][epoch:  9, iter: 204,600, lr:(2.000e-04,)] [eta: 9 days, 11:20:35, time (data): 0.885 (0.005)] l_pix: 4.5529e-02 
2025-05-29 20:52:22,134 INFO: [train..][epoch:  9, iter: 204,700, lr:(2.000e-04,)] [eta: 9 days, 11:09:11, time (data): 0.868 (0.005)] l_pix: 6.6444e-02 
2025-05-29 20:53:51,116 INFO: [train..][epoch:  9, iter: 204,800, lr:(2.000e-04,)] [eta: 9 days, 10:58:12, time (data): 0.889 (0.005)] l_pix: 4.7047e-02 
2025-05-29 20:55:19,684 INFO: [train..][epoch:  9, iter: 204,900, lr:(2.000e-04,)] [eta: 9 days, 10:47:03, time (data): 0.875 (0.005)] l_pix: 4.5630e-02 
2025-05-29 20:56:47,468 INFO: [train..][epoch:  9, iter: 205,000, lr:(2.000e-04,)] [eta: 9 days, 10:35:28, time (data): 0.878 (0.005)] l_pix: 6.2738e-02 
2025-05-29 20:56:47,469 INFO: Saving models and training states.
2025-05-29 21:02:50,475 INFO: Validation validation
	 # psnr: 27.0483	Best: 27.1945 @ 200000 iter

2025-05-29 21:04:18,507 INFO: [train..][epoch:  9, iter: 205,100, lr:(2.000e-04,)] [eta: 9 days, 14:23:24, time (data): 0.879 (0.006)] l_pix: 5.5456e-02 
2025-05-29 21:05:46,074 INFO: [train..][epoch:  9, iter: 205,200, lr:(2.000e-04,)] [eta: 9 days, 14:10:40, time (data): 0.876 (0.006)] l_pix: 4.9020e-02 
2025-05-29 21:07:13,678 INFO: [train..][epoch:  9, iter: 205,300, lr:(2.000e-04,)] [eta: 9 days, 13:58:04, time (data): 0.876 (0.006)] l_pix: 4.4148e-02 
2025-05-29 21:08:41,312 INFO: [train..][epoch:  9, iter: 205,400, lr:(2.000e-04,)] [eta: 9 days, 13:45:35, time (data): 0.876 (0.006)] l_pix: 5.3120e-02 
2025-05-29 21:10:09,006 INFO: [train..][epoch:  9, iter: 205,500, lr:(2.000e-04,)] [eta: 9 days, 13:33:15, time (data): 0.877 (0.006)] l_pix: 5.4973e-02 
2025-05-29 21:11:36,651 INFO: [train..][epoch:  9, iter: 205,600, lr:(2.000e-04,)] [eta: 9 days, 13:21:00, time (data): 0.877 (0.006)] l_pix: 3.8444e-02 
2025-05-29 21:13:04,337 INFO: [train..][epoch:  9, iter: 205,700, lr:(2.000e-04,)] [eta: 9 days, 13:08:53, time (data): 0.877 (0.006)] l_pix: 4.4180e-02 
2025-05-29 21:14:31,670 INFO: [train..][epoch:  9, iter: 205,800, lr:(2.000e-04,)] [eta: 9 days, 12:56:38, time (data): 0.874 (0.006)] l_pix: 4.8005e-02 
2025-05-29 21:15:59,016 INFO: [train..][epoch:  9, iter: 205,900, lr:(2.000e-04,)] [eta: 9 days, 12:44:30, time (data): 0.873 (0.006)] l_pix: 3.8350e-02 
2025-05-29 21:17:26,278 INFO: [train..][epoch:  9, iter: 206,000, lr:(2.000e-04,)] [eta: 9 days, 12:32:25, time (data): 0.872 (0.006)] l_pix: 3.8817e-02 
2025-05-29 21:18:53,726 INFO: [train..][epoch:  9, iter: 206,100, lr:(2.000e-04,)] [eta: 9 days, 12:20:33, time (data): 0.873 (0.006)] l_pix: 5.1776e-02 
2025-05-29 21:20:21,256 INFO: [train..][epoch:  9, iter: 206,200, lr:(2.000e-04,)] [eta: 9 days, 12:08:50, time (data): 0.875 (0.006)] l_pix: 5.2043e-02 
2025-05-29 21:21:48,965 INFO: [train..][epoch:  9, iter: 206,300, lr:(2.000e-04,)] [eta: 9 days, 11:57:19, time (data): 0.876 (0.006)] l_pix: 5.0833e-02 
2025-05-29 21:23:16,731 INFO: [train..][epoch:  9, iter: 206,400, lr:(2.000e-04,)] [eta: 9 days, 11:45:56, time (data): 0.877 (0.006)] l_pix: 6.0872e-02 
2025-05-29 21:24:44,551 INFO: [train..][epoch:  9, iter: 206,500, lr:(2.000e-04,)] [eta: 9 days, 11:34:41, time (data): 0.878 (0.006)] l_pix: 6.0530e-02 
2025-05-29 21:26:12,280 INFO: [train..][epoch:  9, iter: 206,600, lr:(2.000e-04,)] [eta: 9 days, 11:23:27, time (data): 0.877 (0.006)] l_pix: 4.5498e-02 
2025-05-29 21:27:40,061 INFO: [train..][epoch:  9, iter: 206,700, lr:(2.000e-04,)] [eta: 9 days, 11:12:21, time (data): 0.877 (0.006)] l_pix: 4.1641e-02 
2025-05-29 21:29:07,695 INFO: [train..][epoch:  9, iter: 206,800, lr:(2.000e-04,)] [eta: 9 days, 11:01:15, time (data): 0.876 (0.006)] l_pix: 5.3467e-02 
2025-05-29 21:30:35,247 INFO: [train..][epoch:  9, iter: 206,900, lr:(2.000e-04,)] [eta: 9 days, 10:50:12, time (data): 0.876 (0.006)] l_pix: 4.7289e-02 
2025-05-29 21:32:02,891 INFO: [train..][epoch:  9, iter: 207,000, lr:(2.000e-04,)] [eta: 9 days, 10:39:16, time (data): 0.877 (0.006)] l_pix: 5.0904e-02 
2025-05-29 21:33:30,697 INFO: [train..][epoch:  9, iter: 207,100, lr:(2.000e-04,)] [eta: 9 days, 10:28:32, time (data): 0.877 (0.006)] l_pix: 4.3561e-02 
2025-05-29 21:34:58,375 INFO: [train..][epoch:  9, iter: 207,200, lr:(2.000e-04,)] [eta: 9 days, 10:17:48, time (data): 0.876 (0.006)] l_pix: 4.9110e-02 
2025-05-29 21:36:26,071 INFO: [train..][epoch:  9, iter: 207,300, lr:(2.000e-04,)] [eta: 9 days, 10:07:10, time (data): 0.877 (0.006)] l_pix: 5.5246e-02 
2025-05-29 21:37:53,784 INFO: [train..][epoch:  9, iter: 207,400, lr:(2.000e-04,)] [eta: 9 days, 9:56:37, time (data): 0.877 (0.006)] l_pix: 4.2941e-02 
2025-05-29 21:39:21,418 INFO: [train..][epoch:  9, iter: 207,500, lr:(2.000e-04,)] [eta: 9 days, 9:46:07, time (data): 0.877 (0.006)] l_pix: 5.2406e-02 
2025-05-29 21:40:49,106 INFO: [train..][epoch:  9, iter: 207,600, lr:(2.000e-04,)] [eta: 9 days, 9:35:43, time (data): 0.876 (0.006)] l_pix: 5.2586e-02 
2025-05-29 21:42:16,993 INFO: [train..][epoch:  9, iter: 207,700, lr:(2.000e-04,)] [eta: 9 days, 9:25:31, time (data): 0.878 (0.006)] l_pix: 4.3481e-02 
2025-05-29 21:43:44,788 INFO: [train..][epoch:  9, iter: 207,800, lr:(2.000e-04,)] [eta: 9 days, 9:15:20, time (data): 0.878 (0.006)] l_pix: 4.3806e-02 
2025-05-29 21:45:12,436 INFO: [train..][epoch:  9, iter: 207,900, lr:(2.000e-04,)] [eta: 9 days, 9:05:09, time (data): 0.877 (0.006)] l_pix: 5.6506e-02 
2025-05-29 21:46:40,176 INFO: [train..][epoch:  9, iter: 208,000, lr:(2.000e-04,)] [eta: 9 days, 8:55:05, time (data): 0.877 (0.006)] l_pix: 3.9414e-02 
2025-05-29 21:48:07,796 INFO: [train..][epoch:  9, iter: 208,100, lr:(2.000e-04,)] [eta: 9 days, 8:45:02, time (data): 0.876 (0.006)] l_pix: 4.8290e-02 
2025-05-29 21:49:35,692 INFO: [train..][epoch:  9, iter: 208,200, lr:(2.000e-04,)] [eta: 9 days, 8:35:12, time (data): 0.880 (0.006)] l_pix: 5.3545e-02 
2025-05-29 21:51:03,379 INFO: [train..][epoch:  9, iter: 208,300, lr:(2.000e-04,)] [eta: 9 days, 8:25:20, time (data): 0.878 (0.006)] l_pix: 5.4945e-02 
2025-05-29 21:52:30,991 INFO: [train..][epoch:  9, iter: 208,400, lr:(2.000e-04,)] [eta: 9 days, 8:15:30, time (data): 0.876 (0.006)] l_pix: 4.0610e-02 
2025-05-29 21:53:58,751 INFO: [train..][epoch:  9, iter: 208,500, lr:(2.000e-04,)] [eta: 9 days, 8:05:49, time (data): 0.877 (0.006)] l_pix: 4.6248e-02 
2025-05-29 21:55:26,444 INFO: [train..][epoch:  9, iter: 208,600, lr:(2.000e-04,)] [eta: 9 days, 7:56:09, time (data): 0.877 (0.006)] l_pix: 5.0703e-02 
2025-05-29 21:56:54,222 INFO: [train..][epoch:  9, iter: 208,700, lr:(2.000e-04,)] [eta: 9 days, 7:46:37, time (data): 0.878 (0.006)] l_pix: 5.8218e-02 
2025-05-29 21:58:21,900 INFO: [train..][epoch:  9, iter: 208,800, lr:(2.000e-04,)] [eta: 9 days, 7:37:06, time (data): 0.876 (0.006)] l_pix: 4.6567e-02 
2025-05-29 21:59:49,468 INFO: [train..][epoch:  9, iter: 208,900, lr:(2.000e-04,)] [eta: 9 days, 7:27:35, time (data): 0.876 (0.006)] l_pix: 4.9659e-02 
2025-05-29 22:01:17,244 INFO: [train..][epoch:  9, iter: 209,000, lr:(2.000e-04,)] [eta: 9 days, 7:18:14, time (data): 0.878 (0.006)] l_pix: 4.4086e-02 
2025-05-29 22:02:44,997 INFO: [train..][epoch:  9, iter: 209,100, lr:(2.000e-04,)] [eta: 9 days, 7:08:57, time (data): 0.878 (0.006)] l_pix: 6.0712e-02 
2025-05-29 22:04:12,657 INFO: [train..][epoch:  9, iter: 209,200, lr:(2.000e-04,)] [eta: 9 days, 6:59:41, time (data): 0.877 (0.006)] l_pix: 5.6263e-02 
2025-05-29 22:05:40,428 INFO: [train..][epoch:  9, iter: 209,300, lr:(2.000e-04,)] [eta: 9 days, 6:50:32, time (data): 0.877 (0.006)] l_pix: 5.4827e-02 
2025-05-29 22:07:08,117 INFO: [train..][epoch:  9, iter: 209,400, lr:(2.000e-04,)] [eta: 9 days, 6:41:25, time (data): 0.877 (0.006)] l_pix: 5.4019e-02 
2025-05-29 22:08:35,927 INFO: [train..][epoch:  9, iter: 209,500, lr:(2.000e-04,)] [eta: 9 days, 6:32:25, time (data): 0.878 (0.006)] l_pix: 4.8824e-02 
2025-05-29 22:10:03,668 INFO: [train..][epoch:  9, iter: 209,600, lr:(2.000e-04,)] [eta: 9 days, 6:23:26, time (data): 0.878 (0.006)] l_pix: 5.1450e-02 
2025-05-29 22:11:31,414 INFO: [train..][epoch:  9, iter: 209,700, lr:(2.000e-04,)] [eta: 9 days, 6:14:32, time (data): 0.878 (0.006)] l_pix: 4.7680e-02 
2025-05-29 22:12:59,196 INFO: [train..][epoch:  9, iter: 209,800, lr:(2.000e-04,)] [eta: 9 days, 6:05:42, time (data): 0.877 (0.006)] l_pix: 4.3114e-02 
2025-05-29 22:14:27,037 INFO: [train..][epoch:  9, iter: 209,900, lr:(2.000e-04,)] [eta: 9 days, 5:56:57, time (data): 0.878 (0.006)] l_pix: 5.5678e-02 
2025-05-29 22:15:54,836 INFO: [train..][epoch:  9, iter: 210,000, lr:(2.000e-04,)] [eta: 9 days, 5:48:15, time (data): 0.877 (0.006)] l_pix: 4.3485e-02 
2025-05-29 22:15:54,837 INFO: Saving models and training states.
2025-05-29 22:21:55,530 INFO: Validation validation
	 # psnr: 27.0256	Best: 27.1945 @ 200000 iter

2025-05-29 22:23:23,178 INFO: [train..][epoch:  9, iter: 210,100, lr:(2.000e-04,)] [eta: 9 days, 8:48:42, time (data): 0.877 (0.006)] l_pix: 3.6391e-02 
2025-05-29 22:24:50,739 INFO: [train..][epoch:  9, iter: 210,200, lr:(2.000e-04,)] [eta: 9 days, 8:39:13, time (data): 0.875 (0.006)] l_pix: 5.3706e-02 
2025-05-29 22:26:18,459 INFO: [train..][epoch:  9, iter: 210,300, lr:(2.000e-04,)] [eta: 9 days, 8:29:52, time (data): 0.876 (0.006)] l_pix: 4.4318e-02 
2025-05-29 22:27:46,041 INFO: [train..][epoch:  9, iter: 210,400, lr:(2.000e-04,)] [eta: 9 days, 8:20:31, time (data): 0.877 (0.006)] l_pix: 5.1912e-02 
2025-05-29 22:29:13,562 INFO: [train..][epoch:  9, iter: 210,500, lr:(2.000e-04,)] [eta: 9 days, 8:11:12, time (data): 0.876 (0.006)] l_pix: 4.8663e-02 
2025-05-29 22:30:41,436 INFO: [train..][epoch:  9, iter: 210,600, lr:(2.000e-04,)] [eta: 9 days, 8:02:07, time (data): 0.877 (0.006)] l_pix: 5.7358e-02 
2025-05-29 22:32:09,312 INFO: [train..][epoch:  9, iter: 210,700, lr:(2.000e-04,)] [eta: 9 days, 7:53:06, time (data): 0.878 (0.006)] l_pix: 6.1950e-02 
2025-05-29 22:33:37,035 INFO: [train..][epoch:  9, iter: 210,800, lr:(2.000e-04,)] [eta: 9 days, 7:44:03, time (data): 0.879 (0.006)] l_pix: 5.3341e-02 
2025-05-29 22:35:04,727 INFO: [train..][epoch:  9, iter: 210,900, lr:(2.000e-04,)] [eta: 9 days, 7:35:04, time (data): 0.878 (0.006)] l_pix: 4.7826e-02 
2025-05-29 22:36:32,323 INFO: [train..][epoch:  9, iter: 211,000, lr:(2.000e-04,)] [eta: 9 days, 7:26:04, time (data): 0.875 (0.006)] l_pix: 5.4863e-02 
2025-05-29 22:38:00,178 INFO: [train..][epoch:  9, iter: 211,100, lr:(2.000e-04,)] [eta: 9 days, 7:17:17, time (data): 0.877 (0.006)] l_pix: 4.5888e-02 
2025-05-29 22:39:27,756 INFO: [train..][epoch:  9, iter: 211,200, lr:(2.000e-04,)] [eta: 9 days, 7:08:24, time (data): 0.876 (0.006)] l_pix: 5.4486e-02 
2025-05-29 22:40:55,434 INFO: [train..][epoch:  9, iter: 211,300, lr:(2.000e-04,)] [eta: 9 days, 6:59:37, time (data): 0.876 (0.006)] l_pix: 4.2821e-02 
2025-05-29 22:42:23,344 INFO: [train..][epoch:  9, iter: 211,400, lr:(2.000e-04,)] [eta: 9 days, 6:51:01, time (data): 0.879 (0.006)] l_pix: 5.4026e-02 
2025-05-29 22:43:50,989 INFO: [train..][epoch:  9, iter: 211,500, lr:(2.000e-04,)] [eta: 9 days, 6:42:20, time (data): 0.878 (0.006)] l_pix: 3.3075e-02 
2025-05-29 22:45:18,480 INFO: [train..][epoch:  9, iter: 211,600, lr:(2.000e-04,)] [eta: 9 days, 6:33:38, time (data): 0.873 (0.006)] l_pix: 4.6239e-02 
2025-05-29 22:46:46,227 INFO: [train..][epoch:  9, iter: 211,700, lr:(2.000e-04,)] [eta: 9 days, 6:25:06, time (data): 0.876 (0.006)] l_pix: 3.6848e-02 
2025-05-29 22:48:14,121 INFO: [train..][epoch:  9, iter: 211,800, lr:(2.000e-04,)] [eta: 9 days, 6:16:43, time (data): 0.878 (0.006)] l_pix: 4.7576e-02 
2025-05-29 22:49:41,779 INFO: [train..][epoch:  9, iter: 211,900, lr:(2.000e-04,)] [eta: 9 days, 6:08:15, time (data): 0.877 (0.006)] l_pix: 6.4440e-02 
2025-05-29 22:51:09,328 INFO: [train..][epoch:  9, iter: 212,000, lr:(2.000e-04,)] [eta: 9 days, 5:59:47, time (data): 0.876 (0.006)] l_pix: 4.3856e-02 
2025-05-29 22:52:38,723 INFO: [train..][epoch:  9, iter: 212,100, lr:(2.000e-04,)] [eta: 9 days, 5:52:16, time (data): 0.887 (0.006)] l_pix: 4.1172e-02 
2025-05-29 22:54:08,804 INFO: [train..][epoch:  9, iter: 212,200, lr:(2.000e-04,)] [eta: 9 days, 5:45:08, time (data): 0.901 (0.006)] l_pix: 5.1462e-02 
2025-05-29 22:55:39,216 INFO: [train..][epoch:  9, iter: 212,300, lr:(2.000e-04,)] [eta: 9 days, 5:38:11, time (data): 0.903 (0.006)] l_pix: 4.0057e-02 
2025-05-29 22:57:09,538 INFO: [train..][epoch:  9, iter: 212,400, lr:(2.000e-04,)] [eta: 9 days, 5:31:14, time (data): 0.904 (0.006)] l_pix: 3.9096e-02 
2025-05-29 22:58:39,771 INFO: [train..][epoch:  9, iter: 212,500, lr:(2.000e-04,)] [eta: 9 days, 5:24:18, time (data): 0.903 (0.006)] l_pix: 5.5861e-02 
2025-05-29 23:00:10,176 INFO: [train..][epoch:  9, iter: 212,600, lr:(2.000e-04,)] [eta: 9 days, 5:17:28, time (data): 0.903 (0.006)] l_pix: 4.8357e-02 
2025-05-29 23:01:40,408 INFO: [train..][epoch:  9, iter: 212,700, lr:(2.000e-04,)] [eta: 9 days, 5:10:36, time (data): 0.902 (0.006)] l_pix: 5.4437e-02 
2025-05-29 23:03:10,746 INFO: [train..][epoch:  9, iter: 212,800, lr:(2.000e-04,)] [eta: 9 days, 5:03:49, time (data): 0.902 (0.006)] l_pix: 4.6383e-02 
2025-05-29 23:04:40,908 INFO: [train..][epoch:  9, iter: 212,900, lr:(2.000e-04,)] [eta: 9 days, 4:56:59, time (data): 0.902 (0.006)] l_pix: 4.6248e-02 
2025-05-29 23:06:11,126 INFO: [train..][epoch:  9, iter: 213,000, lr:(2.000e-04,)] [eta: 9 days, 4:50:14, time (data): 0.904 (0.006)] l_pix: 5.0198e-02 
2025-05-29 23:07:41,487 INFO: [train..][epoch:  9, iter: 213,100, lr:(2.000e-04,)] [eta: 9 days, 4:43:34, time (data): 0.904 (0.006)] l_pix: 5.1476e-02 
2025-05-29 23:09:11,734 INFO: [train..][epoch:  9, iter: 213,200, lr:(2.000e-04,)] [eta: 9 days, 4:36:54, time (data): 0.901 (0.006)] l_pix: 5.5614e-02 
2025-05-29 23:10:41,925 INFO: [train..][epoch:  9, iter: 213,300, lr:(2.000e-04,)] [eta: 9 days, 4:30:14, time (data): 0.902 (0.006)] l_pix: 4.4387e-02 
2025-05-29 23:12:12,207 INFO: [train..][epoch:  9, iter: 213,400, lr:(2.000e-04,)] [eta: 9 days, 4:23:39, time (data): 0.902 (0.006)] l_pix: 5.8526e-02 
2025-05-29 23:13:42,312 INFO: [train..][epoch:  9, iter: 213,500, lr:(2.000e-04,)] [eta: 9 days, 4:17:01, time (data): 0.901 (0.006)] l_pix: 4.0322e-02 
2025-05-29 23:15:12,509 INFO: [train..][epoch:  9, iter: 213,600, lr:(2.000e-04,)] [eta: 9 days, 4:10:28, time (data): 0.902 (0.006)] l_pix: 4.4334e-02 
2025-05-29 23:16:42,547 INFO: [train..][epoch:  9, iter: 213,700, lr:(2.000e-04,)] [eta: 9 days, 4:03:52, time (data): 0.901 (0.006)] l_pix: 5.0066e-02 
2025-05-29 23:18:12,834 INFO: [train..][epoch:  9, iter: 213,800, lr:(2.000e-04,)] [eta: 9 days, 3:57:26, time (data): 0.902 (0.006)] l_pix: 5.4975e-02 
2025-05-29 23:19:43,095 INFO: [train..][epoch:  9, iter: 213,900, lr:(2.000e-04,)] [eta: 9 days, 3:51:01, time (data): 0.902 (0.006)] l_pix: 4.5066e-02 
2025-05-29 23:21:13,239 INFO: [train..][epoch:  9, iter: 214,000, lr:(2.000e-04,)] [eta: 9 days, 3:44:35, time (data): 0.902 (0.006)] l_pix: 4.9384e-02 
2025-05-29 23:22:43,481 INFO: [train..][epoch:  9, iter: 214,100, lr:(2.000e-04,)] [eta: 9 days, 3:38:13, time (data): 0.902 (0.006)] l_pix: 5.3629e-02 
2025-05-29 23:24:13,565 INFO: [train..][epoch:  9, iter: 214,200, lr:(2.000e-04,)] [eta: 9 days, 3:31:49, time (data): 0.900 (0.006)] l_pix: 5.2171e-02 
2025-05-29 23:25:43,768 INFO: [train..][epoch:  9, iter: 214,300, lr:(2.000e-04,)] [eta: 9 days, 3:25:30, time (data): 0.901 (0.006)] l_pix: 5.1592e-02 
2025-05-29 23:27:14,260 INFO: [train..][epoch:  9, iter: 214,400, lr:(2.000e-04,)] [eta: 9 days, 3:19:21, time (data): 0.906 (0.006)] l_pix: 4.9777e-02 
2025-05-29 23:28:44,649 INFO: [train..][epoch:  9, iter: 214,500, lr:(2.000e-04,)] [eta: 9 days, 3:13:12, time (data): 0.905 (0.006)] l_pix: 3.7205e-02 
2025-05-29 23:30:15,046 INFO: [train..][epoch:  9, iter: 214,600, lr:(2.000e-04,)] [eta: 9 days, 3:07:04, time (data): 0.904 (0.006)] l_pix: 4.8724e-02 
2025-05-29 23:31:45,164 INFO: [train..][epoch:  9, iter: 214,700, lr:(2.000e-04,)] [eta: 9 days, 3:00:51, time (data): 0.902 (0.006)] l_pix: 5.2072e-02 
2025-05-29 23:33:15,297 INFO: [train..][epoch:  9, iter: 214,800, lr:(2.000e-04,)] [eta: 9 days, 2:54:40, time (data): 0.901 (0.006)] l_pix: 4.7193e-02 
2025-05-29 23:34:45,638 INFO: [train..][epoch:  9, iter: 214,900, lr:(2.000e-04,)] [eta: 9 days, 2:48:36, time (data): 0.903 (0.006)] l_pix: 4.8405e-02 
2025-05-29 23:36:15,892 INFO: [train..][epoch:  9, iter: 215,000, lr:(2.000e-04,)] [eta: 9 days, 2:42:32, time (data): 0.902 (0.006)] l_pix: 4.8542e-02 
2025-05-29 23:36:15,894 INFO: Saving models and training states.
2025-05-29 23:42:31,259 INFO: Validation validation
	 # psnr: 27.0908	Best: 27.1945 @ 200000 iter

2025-05-29 23:44:01,623 INFO: [train..][epoch:  9, iter: 215,100, lr:(2.000e-04,)] [eta: 9 days, 5:19:40, time (data): 0.903 (0.006)] l_pix: 4.3088e-02 
2025-05-29 23:45:31,792 INFO: [train..][epoch:  9, iter: 215,200, lr:(2.000e-04,)] [eta: 9 days, 5:13:04, time (data): 0.902 (0.006)] l_pix: 4.6185e-02 
2025-05-29 23:47:01,897 INFO: [train..][epoch:  9, iter: 215,300, lr:(2.000e-04,)] [eta: 9 days, 5:06:28, time (data): 0.901 (0.006)] l_pix: 3.1995e-02 
2025-05-29 23:48:32,030 INFO: [train..][epoch:  9, iter: 215,400, lr:(2.000e-04,)] [eta: 9 days, 4:59:55, time (data): 0.904 (0.006)] l_pix: 6.3959e-02 
2025-05-29 23:50:02,123 INFO: [train..][epoch:  9, iter: 215,500, lr:(2.000e-04,)] [eta: 9 days, 4:53:23, time (data): 0.902 (0.006)] l_pix: 4.4172e-02 
2025-05-29 23:51:32,359 INFO: [train..][epoch:  9, iter: 215,600, lr:(2.000e-04,)] [eta: 9 days, 4:46:56, time (data): 0.900 (0.006)] l_pix: 4.2736e-02 
2025-05-29 23:53:02,525 INFO: [train..][epoch:  9, iter: 215,700, lr:(2.000e-04,)] [eta: 9 days, 4:40:30, time (data): 0.901 (0.006)] l_pix: 4.9598e-02 
2025-05-29 23:54:32,788 INFO: [train..][epoch:  9, iter: 215,800, lr:(2.000e-04,)] [eta: 9 days, 4:34:08, time (data): 0.903 (0.006)] l_pix: 3.5832e-02 
2025-05-29 23:56:03,166 INFO: [train..][epoch:  9, iter: 215,900, lr:(2.000e-04,)] [eta: 9 days, 4:27:50, time (data): 0.904 (0.006)] l_pix: 5.6872e-02 
2025-05-29 23:57:33,475 INFO: [train..][epoch:  9, iter: 216,000, lr:(2.000e-04,)] [eta: 9 days, 4:21:33, time (data): 0.902 (0.006)] l_pix: 4.9015e-02 
2025-05-29 23:59:03,750 INFO: [train..][epoch:  9, iter: 216,100, lr:(2.000e-04,)] [eta: 9 days, 4:15:17, time (data): 0.902 (0.006)] l_pix: 4.2447e-02 
2025-05-30 00:00:34,101 INFO: [train..][epoch:  9, iter: 216,200, lr:(2.000e-04,)] [eta: 9 days, 4:09:04, time (data): 0.905 (0.006)] l_pix: 4.8355e-02 
2025-05-30 00:02:04,341 INFO: [train..][epoch:  9, iter: 216,300, lr:(2.000e-04,)] [eta: 9 days, 4:02:51, time (data): 0.903 (0.006)] l_pix: 4.5738e-02 
2025-05-30 00:03:34,565 INFO: [train..][epoch:  9, iter: 216,400, lr:(2.000e-04,)] [eta: 9 days, 3:56:39, time (data): 0.903 (0.006)] l_pix: 4.8703e-02 
2025-05-30 00:05:04,813 INFO: [train..][epoch:  9, iter: 216,500, lr:(2.000e-04,)] [eta: 9 days, 3:50:29, time (data): 0.902 (0.006)] l_pix: 5.3015e-02 
2025-05-30 00:06:35,094 INFO: [train..][epoch:  9, iter: 216,600, lr:(2.000e-04,)] [eta: 9 days, 3:44:22, time (data): 0.904 (0.006)] l_pix: 4.8659e-02 
2025-05-30 00:08:05,380 INFO: [train..][epoch:  9, iter: 216,700, lr:(2.000e-04,)] [eta: 9 days, 3:38:17, time (data): 0.903 (0.006)] l_pix: 4.2406e-02 
2025-05-30 00:09:35,518 INFO: [train..][epoch:  9, iter: 216,800, lr:(2.000e-04,)] [eta: 9 days, 3:32:10, time (data): 0.903 (0.006)] l_pix: 5.6715e-02 
2025-05-30 00:11:05,715 INFO: [train..][epoch:  9, iter: 216,900, lr:(2.000e-04,)] [eta: 9 days, 3:26:06, time (data): 0.902 (0.006)] l_pix: 5.4596e-02 
2025-05-30 00:12:35,928 INFO: [train..][epoch:  9, iter: 217,000, lr:(2.000e-04,)] [eta: 9 days, 3:20:04, time (data): 0.903 (0.006)] l_pix: 4.6261e-02 
2025-05-30 00:14:06,120 INFO: [train..][epoch:  9, iter: 217,100, lr:(2.000e-04,)] [eta: 9 days, 3:14:04, time (data): 0.902 (0.006)] l_pix: 5.0213e-02 
2025-05-30 00:15:36,316 INFO: [train..][epoch:  9, iter: 217,200, lr:(2.000e-04,)] [eta: 9 days, 3:08:05, time (data): 0.901 (0.006)] l_pix: 5.0869e-02 
2025-05-30 00:17:06,546 INFO: [train..][epoch:  9, iter: 217,300, lr:(2.000e-04,)] [eta: 9 days, 3:02:09, time (data): 0.902 (0.006)] l_pix: 4.8867e-02 
2025-05-30 00:18:36,744 INFO: [train..][epoch:  9, iter: 217,400, lr:(2.000e-04,)] [eta: 9 days, 2:56:13, time (data): 0.903 (0.006)] l_pix: 4.4492e-02 
2025-05-30 00:20:06,830 INFO: [train..][epoch:  9, iter: 217,500, lr:(2.000e-04,)] [eta: 9 days, 2:50:16, time (data): 0.901 (0.006)] l_pix: 4.4945e-02 
2025-05-30 00:21:34,766 INFO: [train..][epoch:  9, iter: 217,600, lr:(2.000e-04,)] [eta: 9 days, 2:43:30, time (data): 0.877 (0.006)] l_pix: 5.1844e-02 
2025-05-30 00:23:03,721 INFO: [train..][epoch:  9, iter: 217,700, lr:(2.000e-04,)] [eta: 9 days, 2:37:10, time (data): 0.886 (0.006)] l_pix: 4.4786e-02 
2025-05-30 00:24:33,653 INFO: [train..][epoch:  9, iter: 217,800, lr:(2.000e-04,)] [eta: 9 days, 2:31:15, time (data): 0.922 (0.005)] l_pix: 5.8587e-02 
2025-05-30 00:26:05,722 INFO: [train..][epoch:  9, iter: 217,900, lr:(2.000e-04,)] [eta: 9 days, 2:26:12, time (data): 0.921 (0.005)] l_pix: 3.4880e-02 
2025-05-30 00:27:37,684 INFO: [train..][epoch:  9, iter: 218,000, lr:(2.000e-04,)] [eta: 9 days, 2:21:08, time (data): 0.922 (0.006)] l_pix: 7.0506e-02 
2025-05-30 00:29:09,719 INFO: [train..][epoch:  9, iter: 218,100, lr:(2.000e-04,)] [eta: 9 days, 2:16:07, time (data): 0.921 (0.006)] l_pix: 4.2060e-02 
2025-05-30 00:30:42,859 INFO: [train..][epoch:  9, iter: 218,200, lr:(2.000e-04,)] [eta: 9 days, 2:11:33, time (data): 0.943 (0.005)] l_pix: 4.3667e-02 
2025-05-30 00:32:14,947 INFO: [train..][epoch:  9, iter: 218,300, lr:(2.000e-04,)] [eta: 9 days, 2:06:36, time (data): 0.927 (0.006)] l_pix: 4.1820e-02 
2025-05-30 00:33:46,771 INFO: [train..][epoch:  9, iter: 218,400, lr:(2.000e-04,)] [eta: 9 days, 2:01:34, time (data): 0.922 (0.005)] l_pix: 5.7150e-02 
2025-05-30 00:35:18,885 INFO: [train..][epoch:  9, iter: 218,500, lr:(2.000e-04,)] [eta: 9 days, 1:56:40, time (data): 0.921 (0.005)] l_pix: 4.9769e-02 
2025-05-30 00:36:50,551 INFO: [train..][epoch:  9, iter: 218,600, lr:(2.000e-04,)] [eta: 9 days, 1:51:36, time (data): 0.917 (0.005)] l_pix: 4.6577e-02 
2025-05-30 00:38:22,176 INFO: [train..][epoch:  9, iter: 218,700, lr:(2.000e-04,)] [eta: 9 days, 1:46:33, time (data): 0.916 (0.006)] l_pix: 5.2333e-02 
2025-05-30 00:39:53,703 INFO: [train..][epoch:  9, iter: 218,800, lr:(2.000e-04,)] [eta: 9 days, 1:41:29, time (data): 0.913 (0.006)] l_pix: 5.0812e-02 
2025-05-30 00:41:24,658 INFO: [train..][epoch:  9, iter: 218,900, lr:(2.000e-04,)] [eta: 9 days, 1:36:13, time (data): 0.910 (0.006)] l_pix: 6.0075e-02 
2025-05-30 00:42:55,752 INFO: [train..][epoch:  9, iter: 219,000, lr:(2.000e-04,)] [eta: 9 days, 1:31:01, time (data): 0.913 (0.006)] l_pix: 5.9236e-02 
2025-05-30 00:44:26,714 INFO: [train..][epoch:  9, iter: 219,100, lr:(2.000e-04,)] [eta: 9 days, 1:25:48, time (data): 0.910 (0.006)] l_pix: 4.9159e-02 
2025-05-30 00:45:58,202 INFO: [train..][epoch:  9, iter: 219,200, lr:(2.000e-04,)] [eta: 9 days, 1:20:48, time (data): 0.908 (0.006)] l_pix: 4.7386e-02 
2025-05-30 00:47:28,926 INFO: [train..][epoch:  9, iter: 219,300, lr:(2.000e-04,)] [eta: 9 days, 1:15:32, time (data): 0.907 (0.006)] l_pix: 5.2060e-02 
2025-05-30 00:48:59,937 INFO: [train..][epoch:  9, iter: 219,400, lr:(2.000e-04,)] [eta: 9 days, 1:10:24, time (data): 0.911 (0.006)] l_pix: 4.1876e-02 
2025-05-30 00:50:30,636 INFO: [train..][epoch:  9, iter: 219,500, lr:(2.000e-04,)] [eta: 9 days, 1:05:09, time (data): 0.908 (0.005)] l_pix: 3.9947e-02 
2025-05-30 00:52:01,320 INFO: [train..][epoch:  9, iter: 219,600, lr:(2.000e-04,)] [eta: 9 days, 0:59:56, time (data): 0.906 (0.005)] l_pix: 5.2968e-02 
2025-05-30 00:53:33,245 INFO: [train..][epoch:  9, iter: 219,700, lr:(2.000e-04,)] [eta: 9 days, 0:55:12, time (data): 0.916 (0.006)] l_pix: 4.6049e-02 
2025-05-30 00:55:03,749 INFO: [train..][epoch:  9, iter: 219,800, lr:(2.000e-04,)] [eta: 9 days, 0:49:58, time (data): 0.902 (0.006)] l_pix: 4.3328e-02 
2025-05-30 00:56:34,337 INFO: [train..][epoch:  9, iter: 219,900, lr:(2.000e-04,)] [eta: 9 days, 0:44:46, time (data): 0.905 (0.006)] l_pix: 4.2168e-02 
2025-05-30 00:58:05,267 INFO: [train..][epoch:  9, iter: 220,000, lr:(2.000e-04,)] [eta: 9 days, 0:39:43, time (data): 0.906 (0.006)] l_pix: 5.2948e-02 
2025-05-30 00:58:05,268 INFO: Saving models and training states.
2025-05-30 01:04:07,965 INFO: Validation validation
	 # psnr: 27.0561	Best: 27.1945 @ 200000 iter

2025-05-30 01:05:38,739 INFO: [train..][epoch:  9, iter: 220,100, lr:(2.000e-04,)] [eta: 9 days, 2:48:57, time (data): 0.907 (0.006)] l_pix: 5.9848e-02 
2025-05-30 01:07:09,056 INFO: [train..][epoch:  9, iter: 220,200, lr:(2.000e-04,)] [eta: 9 days, 2:43:19, time (data): 0.901 (0.006)] l_pix: 5.2042e-02 
2025-05-30 01:08:39,393 INFO: [train..][epoch:  9, iter: 220,300, lr:(2.000e-04,)] [eta: 9 days, 2:37:43, time (data): 0.903 (0.006)] l_pix: 4.8659e-02 
